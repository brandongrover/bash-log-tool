#! /bin/bash
# Sources
config_file=/home/f43ak/git/admintool/config/tool.config
exclude_list=/home/f43ak/git/admintool/config/exclude.list
function_list=/home/f43ak/git/admintool/data/func.list
source $exclude_list
source $config_file
source $function_list

# Setup check
if [ "$setupInit" != '1' ]
then
        setup
else
        :
fi

# Initiate startup function
startUp

# Argument Handler
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -a|--userattempts)
            showUserAttempts="$2"
            shift
            shift
	    ;;
    -av|--attemptvalue)
            attemptValue="$2"
            shift
            shift
            ;;
    -b|--showban)
            showBan="$2"
            shift
            shift
            ;;
    -f|--failedamount)
            failedAmount="$2"
            shift
            shift
            ;;
    -s|--successamount)
            successAmount="$2"
            shift
            shift
            ;;
    -e|--exclude)
            exclude="$2"
            shift
            shift
            ;;
   -u|--userswitch)
           switchEvents="$2"
           shift
           shift
           ;;
   -h|-?|--help)
           usage
           exit
           ;;
    *)    # default case
            POSITIONAL+=("$1")
            shift
            ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# Start Print
echo -e $spacer 
echo -e "\e[90m*\e[96m                                                     Admin Tool                                                            \e[90m \e[49m*"
echo -e $spacer

# Check for intrusion
unAuthorized=$(searchExcluder "$recentSuccessfulEvents" '5')
if [ "$unAuthorized" != "0" ]
        then
                intrusion=Yes
        else
                intrusion=No
fi

# Intrusion Check Print
echo -e "\e[96m Intrusion: \e[33m$intrusion\e[25m\e[90m"
echo -e "\e[96m Log Size: \e[33m$authSize"" \e[25m\e[90m"
echo -e "\e[96m Log Entries: \e[33m$authEntries \e[25m\e[90m"
echo -e "\e[96m Failed Entries: \e[33m$failedLogins \e[25m\e[90m"
echo -e "\e[96m Root Attempts: \e[33m$failedRootCounter \e[90m"
echo -e "\e[96m User Account Attempts: \e[33m$failedUserCounter \e[90m"

# Recent Failed Events Output
echo -e $spacer
echo -e "\e[96m Recent failed events:"
echo -e $spacer
echo -e "\e[91m"
searchExcluder "$recentFailedEvents" '1'
echo -e "\e[0m"
echo -e $spacer

# Recent Successful Events Output
echo -e "\e[96m Recent successful events:"
echo -e $spacer
echo -e "\e[92m"
searchExcluder "$recentSuccessfulEvents" '2'
echo -e "\e[0m"
echo -e $spacer

# Switch User Events
#echo -e "\e[96m Recent switch user events:"
#echo -e $spacer
#echo -e "\e[33m"
#searchExcluder "$switchUserEvents" '3'
#echo -e "\e[0m"
#echo -e $spacer
display 'Recent Switch user events:' "{searchExcluder "$switchUserEvents" 3}"

showUserAttempts=true # delete later
# Show User Attempts?
if [ "$showUserAttempts" == true ]
then
	echo -e "\e[96m User Attempts:"
	echo -e $spacer
	# echo -e "\e[33m${failedUserArray[@]}" | fold -w 130 -s
	userAttemptCheck
	echo -e $spacer
fi

# Show Ban?
if [ "$showBan" == true ]
then
        echo -e "\e[96m Ban Stats:"
        echo -e $spacer
        echo -e "\e[33m$banStats" | fold -w 130 -s
        echo -e $spacer
fi
